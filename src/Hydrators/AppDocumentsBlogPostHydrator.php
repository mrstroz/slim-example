<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Hydrator\HydratorException;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\Query\Query;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;

use function array_key_exists;
use function gettype;
use function is_array;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class AppDocumentsBlogPostHydrator implements HydratorInterface
{
    public function __construct(private DocumentManager $dm, private ClassMetadata $class) {}

    public function hydrate(object $document, array $data, array $hints = []): array
    {
        $hydratedData = [];

        // Field(type: "id")
        if (isset($data['_id']) || (! empty($this->class->fieldMappings['id']['nullable']) && array_key_exists('_id', $data))) {
            $value = $data['_id'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['id']['type'];
                $return = $value instanceof \MongoDB\BSON\ObjectId ? (string) $value : $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        // Field(type: "string")
        if (isset($data['title']) || (! empty($this->class->fieldMappings['title']['nullable']) && array_key_exists('title', $data))) {
            $value = $data['title'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['title']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['title']->setValue($document, $return);
            $hydratedData['title'] = $return;
        }

        // Field(type: "string")
        if (isset($data['body']) || (! empty($this->class->fieldMappings['body']['nullable']) && array_key_exists('body', $data))) {
            $value = $data['body'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['body']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['body']->setValue($document, $return);
            $hydratedData['body'] = $return;
        }

        // Field(type: "date_immutable")
        if (isset($data['createdAt']) || (! empty($this->class->fieldMappings['createdAt']['nullable']) && array_key_exists('createdAt', $data))) {
            $value = $data['createdAt'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['createdAt']['type'];
                if ($value === null) { $return = null; } else { $return = \Doctrine\ODM\MongoDB\Types\DateImmutableType::getDateTime($value); }
            } else {
                $return = null;
            }
            $this->class->reflFields['createdAt']->setValue($document, $return);
            $hydratedData['createdAt'] = $return;
        }
        return $hydratedData;
    }
}